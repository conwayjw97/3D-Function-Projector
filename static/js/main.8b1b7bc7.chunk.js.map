{"version":3,"sources":["components/canvas/utils/Graphics.js","components/canvas/Canvas.js","components/controls/Controls.js","App.js","index.js"],"names":["white","green","blue","red","rightTopBack","THREE","rightBottomBack","rightTopFront","rightBottomFront","leftTopBack","leftBottomBack","leftTopFront","leftBottomFront","Graphics","canvas","width","height","expression","detail","xRange","yRange","zRange","this","scene","camera","position","set","renderer","antialias","setSize","setClearColor","controls","OrbitControls","domElement","target","renderAxisIndicators","renderExpression","animate","requestAnimationFrame","render","update","remove","expressionGroup","renderLine","color","renderText","startVec","endVec","material","linePoints","lineGeometry","setFromPoints","line","add","string","x","y","z","text","SpriteText","fontFace","expPoints","evaluateExpression","createExpressionDots","length","createExpressionSquare","createExpressionPlane","includes","xEval","replaceAll","yPoints","zEval","yEval","evaluate","push","group","points","concat","apply","geometry","size","expressionPoints","undefined","isWholeSquare","isClosingTriangle","isClosingLine","colour","getColourForVector","side","firstTriangleValid","secondTriangleValid","downardsTriangleValid","downardsTriangleNeeded","planePointsA","planeGeometryA","planePointsB","planeGeometryB","planePoints","planeGeometry","vector","Math","round","abs","Canvas","props","useRef","window","innerWidth","innerHeight","graphicsControls","useEffect","graphics","current","updateExpression","updateCount","ref","className","Controls","type","id","name","value","onChange","handleExpressionChange","onClick","handleUpdate","App","useState","setUpdateCount","setDetail","setExpression","handleDetailChange","event","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b1b7bc7.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport SpriteText from 'three-spritetext';\r\n\r\nimport { evaluate } from 'mathjs'\r\n\r\nconst black = \"rgb(40, 44, 52)\";\r\nconst white = \"rgb(255, 255, 255)\";\r\nconst green = \"rgb(0, 255, 0)\";\r\nconst blue = \"rgb(0, 0, 255)\";\r\nconst red = \"rgb(255, 0, 43)\";\r\n\r\nconst rightTopBack = new THREE.Vector3(100, 100, -100);\r\nconst rightBottomBack = new THREE.Vector3(100, -100, -100);\r\nconst rightTopFront = new THREE.Vector3(100, 100, 100);\r\nconst rightBottomFront = new THREE.Vector3(100, -100, 100);\r\nconst leftTopBack = new THREE.Vector3(-100, 100, -100);\r\nconst leftBottomBack = new THREE.Vector3(-100, -100, -100);\r\nconst leftTopFront = new THREE.Vector3(-100, 100, 100);\r\nconst leftBottomFront = new THREE.Vector3(-100, -100, 100);\r\n\r\nexport default class Graphics{\r\n  constructor(canvas, width, height, expression, detail, xRange, yRange, zRange){\r\n    this.expression = expression;\r\n    this.detail = detail;\r\n    this.xRange = xRange;\r\n    this.yRange = yRange;\r\n    this.zRange = zRange;\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(45, width/height, 0.1, 1000);\r\n    this.camera.position.set(150, 100, 150);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setClearColor(black);\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.target = new THREE.Vector3(0, 0, 0);\r\n\r\n    this.renderAxisIndicators();\r\n    this.renderExpression();\r\n\r\n    const animate = () => {\r\n    \trequestAnimationFrame(animate);\r\n    \tthis.renderer.render(this.scene, this.camera);\r\n      this.controls.update();\r\n    }\r\n\r\n    animate();\r\n  }\r\n\r\n  updateExpression(expression){\r\n    this.expression = expression;\r\n    this.scene.remove(this.expressionGroup);\r\n    this.renderExpression();\r\n  }\r\n\r\n  renderAxisIndicators(){\r\n    this.renderLine(leftBottomBack, rightBottomBack, new THREE.LineBasicMaterial({color: green}));\r\n    this.renderLine(leftBottomBack, leftTopBack, new THREE.LineBasicMaterial({color: red}));\r\n    this.renderLine(leftBottomBack, leftBottomFront, new THREE.LineBasicMaterial({color: blue}));\r\n\r\n    this.renderText(\"X\", 102.5, -100, -100, green);\r\n    this.renderText(\"Z\", -100, 102.5, -100, red);\r\n    this.renderText(\"Y\", -100, -100, 102.5, blue);\r\n\r\n    this.renderLine(rightBottomBack, rightTopBack, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(rightTopBack, leftTopBack, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(leftTopBack, leftTopFront, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(leftTopFront, leftTopFront, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(leftTopFront, leftBottomFront, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(leftTopFront, rightTopFront, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(leftBottomFront, rightBottomFront, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(rightBottomFront,  rightTopFront, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(rightTopFront, rightTopBack, new THREE.LineBasicMaterial({color: white}));\r\n    this.renderLine(rightBottomFront, rightBottomBack, new THREE.LineBasicMaterial({color: white}));\r\n  }\r\n\r\n  renderLine(startVec, endVec, material){\r\n    const linePoints = [startVec, endVec];\r\n    const lineGeometry = new THREE.BufferGeometry().setFromPoints(linePoints);\r\n    const line = new THREE.Line(lineGeometry, material);\r\n    this.scene.add(line);\r\n  }\r\n\r\n  renderText(string, x, y, z, color){\r\n    const text = new SpriteText(string, 6, color);\r\n    text.position.x = x;\r\n    text.position.y = y;\r\n    text.position.z = z;\r\n    text.fontFace = \"Consolas\";\r\n    this.scene.add(text);\r\n  }\r\n\r\n  renderExpression(){\r\n    this.expressionGroup = new THREE.Group();\r\n    const expPoints = this.evaluateExpression();\r\n\r\n    this.expressionGroup = this.createExpressionDots(this.expressionGroup, expPoints);\r\n    for(let x=0; x<expPoints.length; x++){\r\n      for(let y=0; y<expPoints[x].length; y++){\r\n        // this.renderText(x + \":\" + y, expPoints[x][y].x, expPoints[x][y].y, expPoints[x][y].z, white);\r\n        this.expressionGroup = this.createExpressionSquare(this.expressionGroup, expPoints, x, y);\r\n        this.expressionGroup = this.createExpressionPlane(this.expressionGroup, expPoints, x, y);\r\n      }\r\n    }\r\n\r\n    this.scene.add(this.expressionGroup);\r\n  }\r\n\r\n  evaluateExpression(){\r\n    let expPoints = [];\r\n    if(this.expression.includes(\"x\") || this.expression.includes(\"y\")){\r\n      for(let x=this.xRange[0]; x<=this.xRange[1]; x+=this.detail){\r\n        let xEval = this.expression.replaceAll(\"x\", \"(\"+x+\")\");\r\n        let yPoints = [];\r\n        for(let y=this.yRange[0]; y<=this.yRange[1]; y+=this.detail){\r\n          let zEval;\r\n          if(xEval.includes(\"y\")){\r\n            let yEval = xEval.replaceAll(\"y\", \"(\"+y+\")\");\r\n            zEval = evaluate(yEval);\r\n          }\r\n          else{\r\n            zEval = evaluate(xEval);\r\n          }\r\n          if(zEval>=this.zRange[0] && zEval<=this.zRange[1]){\r\n            yPoints.push(new THREE.Vector3(x, zEval, y));\r\n          }\r\n        }\r\n        if(yPoints.length > 0){\r\n          expPoints.push(yPoints);\r\n        }\r\n      }\r\n    }\r\n    return expPoints;\r\n  }\r\n\r\n  createExpressionDots(group, expPoints){\r\n    const points = [].concat.apply([], expPoints);\r\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n    const material = new THREE.PointCloudMaterial({color: white, size: 0.25});\r\n    const expressionPoints = new THREE.Points(geometry, material);\r\n    group.add(expressionPoints);\r\n    return group;\r\n  }\r\n\r\n  createExpressionSquare(group, expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const material = new THREE.LineBasicMaterial({color: white});\r\n\r\n      const isWholeSquare = expPoints[x+1][y] !== undefined && expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined && expPoints[x][y+1] !== undefined;\r\n      const isClosingTriangle = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const isClosingLine = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let points = null;\r\n      if(isWholeSquare){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingTriangle){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingLine){\r\n        points = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n      }\r\n\r\n      if(points !== null){\r\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        const line = new THREE.Line(geometry, material);\r\n        group.add(line);\r\n      }\r\n    }\r\n\r\n    return group;\r\n  }\r\n\r\n  createExpressionPlane(group, expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const colour = this.getColourForVector(expPoints[x][y]);\r\n      const material = new THREE.MeshBasicMaterial({color: colour, side: THREE.DoubleSide});\r\n\r\n      const firstTriangleValid = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const secondTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const downardsTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let downardsTriangleNeeded = true;\r\n      if(firstTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsA = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1]];\r\n        const planeGeometryA = new THREE.BufferGeometry().setFromPoints(planePointsA);\r\n        group.add(new THREE.Mesh(planeGeometryA, material));\r\n      }\r\n      if(secondTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsB = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y+1]];\r\n        const planeGeometryB = new THREE.BufferGeometry().setFromPoints(planePointsB);\r\n        group.add(new THREE.Mesh(planeGeometryB, material));\r\n      }\r\n      if(downardsTriangleNeeded && downardsTriangleValid){\r\n        const planePoints = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n        const planeGeometry = new THREE.BufferGeometry().setFromPoints(planePoints);\r\n        group.add(new THREE.Mesh(planeGeometry, material));\r\n      }\r\n    }\r\n\r\n    return group;\r\n  }\r\n\r\n  getColourForVector(vector){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    red = Math.round(Math.abs(vector.z) * (255/100));\r\n    blue = Math.round(Math.abs(vector.y) * (255/100));\r\n    green = Math.round(Math.abs(vector.x) * (255/100));\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n\r\n  getColourForY(y){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    if(y>0){\r\n      red = Math.round(y * (255/100));\r\n      green = Math.round(255 - red);\r\n    }\r\n    else{\r\n      blue = Math.round(-y * (255/100));\r\n      green = Math.round(255 - blue);\r\n    }\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n}\r\n","// https://observablehq.com/@kelleyvanevert/projection-of-3d-models-using-javascript-and-html5-canvas\r\n// https://academo.org/demos/3d-surface-plotter/\r\n// https://www.benjoffe.com/code/tools/functions3d/examples\r\n// https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene\r\n// https://threejsfundamentals.org/threejs/lessons/threejs-custom-geometry.html\r\n// https://codepen.io/WebSeed/pen/ZmXxKz\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport Graphics from \"./utils/Graphics.js\"\r\nimport \"./Canvas.css\";\r\n\r\nfunction Canvas(props) {\r\n  const canvas = useRef(null);\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  const graphicsControls = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const graphics = new Graphics(canvas.current, width, height, props.expression, props.detail, [-100, 100], [-100, 100], [-100, 100]);\r\n\r\n    const updateExpression = (expression) => {\r\n      graphics.updateExpression(expression);\r\n    }\r\n\r\n    graphicsControls.current = {updateExpression};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    graphicsControls.current.updateExpression(props.expression);\r\n  }, [props.updateCount]);\r\n\r\n  return (\r\n    <canvas ref={canvas} width={width} height={height} className=\"canvas\">\r\n      <p>Your browser doesn't support canvas.</p>\r\n    </canvas>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport \"./Controls.css\";\r\n\r\nfunction Controls(props) {\r\n  return (\r\n    <div className=\"controls\">\r\n      <div className=\"expression\">\r\n        <label>Z:</label>\r\n        <input type=\"text\" id=\"expression\" name=\"expression\" value={props.expression} onChange={props.handleExpressionChange} />\r\n        <button onClick={props.handleUpdate}>Update</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import { useState, useEffect } from 'react';\r\nimport Canvas from './components/canvas/Canvas.js';\r\nimport Controls from './components/controls/Controls.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [updateCount, setUpdateCount] = useState(0);\r\n  const [detail, setDetail] = useState(5);\r\n  const [expression, setExpression] = useState(\"1-abs(x+y)-abs(y-x)\");\r\n\r\n  const handleDetailChange = (event) => {\r\n    setDetail(event.target.value);\r\n  }\r\n\r\n  const handleExpressionChange = (event) => {\r\n    setExpression(event.target.value);\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    setUpdateCount(updateCount + 1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Canvas\r\n        detail={detail}\r\n        expression={expression}\r\n        updateCount={updateCount}\r\n      />\r\n      <Controls\r\n        detail={detail}\r\n        handleDetailChange={handleDetailChange}\r\n        expression={expression}\r\n        handleExpressionChange={handleExpressionChange}\r\n        handleUpdate={handleUpdate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}