{"version":3,"sources":["components/canvas/utils/Graphics.js","components/canvas/Canvas.js","components/controls/Controls.js","App.js","index.js"],"names":["white","green","blue","red","rightBottomBack","THREE","leftTopBack","leftBottomBack","leftBottomFront","Graphics","canvas","width","height","expression","detail","ranges","renderingFeatures","this","xRange","parseInt","yRange","zRange","scene","camera","position","set","renderer","antialias","setSize","setClearColor","controls","OrbitControls","domElement","target","renderAxes","renderExpression","animate","requestAnimationFrame","render","update","remove","expressionGroup","renderLine","color","renderText","startVec","endVec","material","linePoints","lineGeometry","setFromPoints","line","add","string","x","y","z","text","SpriteText","fontFace","expPoints","evaluateExpression","i","createAxisUnit","rangeScale","createExpressionDots","length","expSquares","createExpressionSquare","expPlanes","createExpressionPlane","n","nRangeMin","nRangeMax","outRangeMin","outRangeMax","step","includes","xEval","replaceAll","yPoints","zEval","yEval","evaluate","xPos","yPos","zPos","push","points","concat","apply","geometry","size","undefined","isWholeSquare","isClosingTriangle","isClosingLine","firstTriangleValid","secondTriangleValid","downardsTriangleValid","downardsTriangleNeeded","planeGeometry","planePointsBottomTriangle","BufferGeometryUtils","mergeBufferGeometries","planePointsTopTriangle","planePointsDownardsTriangle","colour","getColourForY","side","vector","Math","round","abs","Canvas","props","useRef","window","innerWidth","innerHeight","graphicsControls","useEffect","graphics","current","updateProjection","updateCount","ref","className","Controls","type","id","name","min","max","value","onChange","handleDetailChange","handleExpressionChange","onClick","handleUpdate","handleRangeChange","style","defaultChecked","handleRenderingFeatureChange","App","useState","setUpdateCount","setDetail","setExpression","setRanges","setRenderingFeatures","event","newRanges","newRenderingFeatures","JSON","parse","stringify","checked","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.020c7d23.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BufferGeometryUtils } from \"three/examples/jsm/utils/BufferGeometryUtils.js\";\r\n\r\nimport SpriteText from 'three-spritetext';\r\n\r\nimport { evaluate } from 'mathjs'\r\n\r\nconst black = \"rgb(40, 44, 52)\";\r\nconst white = \"rgb(255, 255, 255)\";\r\nconst green = \"rgb(0, 255, 0)\";\r\nconst blue = \"rgb(0, 0, 255)\";\r\nconst red = \"rgb(255, 0, 43)\";\r\n\r\nconst rightBottomBack = new THREE.Vector3(100, -100, -100);\r\nconst leftTopBack = new THREE.Vector3(-100, 100, -100);\r\nconst leftBottomBack = new THREE.Vector3(-100, -100, -100);\r\nconst leftBottomFront = new THREE.Vector3(-100, -100, 100);\r\n\r\nexport default class Graphics{\r\n  constructor(canvas, width, height, expression, detail, ranges, renderingFeatures){\r\n    this.expression = expression;\r\n    this.detail = detail;\r\n    this.xRange = [parseInt(ranges[0][0]), parseInt(ranges[0][1])];\r\n    this.yRange = [parseInt(ranges[1][0]), parseInt(ranges[1][1])];\r\n    this.zRange = [parseInt(ranges[2][0]), parseInt(ranges[2][1])];\r\n    this.renderingFeatures = renderingFeatures;\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(45, width/height, 0.1, 1000);\r\n    this.camera.position.set(150, 100, 150);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setClearColor(black);\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.target = new THREE.Vector3(0, 0, 0);\r\n\r\n    this.renderAxes();\r\n    this.renderExpression();\r\n\r\n    const animate = () => {\r\n    \trequestAnimationFrame(animate);\r\n    \tthis.renderer.render(this.scene, this.camera);\r\n      this.controls.update();\r\n    }\r\n\r\n    animate();\r\n  }\r\n\r\n  updateProjection(expression, detail, ranges, renderingFeatures){\r\n    if(this.expression !== expression || this.detail !== detail || this.ranges !== ranges || this.renderingFeatures !== renderingFeatures){\r\n      this.expression = expression;\r\n      this.detail = detail;\r\n      this.xRange = [parseInt(ranges[0][0]), parseInt(ranges[0][1])];\r\n      this.yRange = [parseInt(ranges[1][0]), parseInt(ranges[1][1])];\r\n      this.zRange = [parseInt(ranges[2][0]), parseInt(ranges[2][1])];\r\n      this.renderingFeatures = renderingFeatures;\r\n      this.scene.remove(this.expressionGroup);\r\n      this.renderExpression();\r\n    }\r\n  }\r\n\r\n  renderAxes(){\r\n    this.renderLine(leftBottomBack, rightBottomBack, new THREE.LineBasicMaterial({color: green}));\r\n    this.renderLine(leftBottomBack, leftBottomFront, new THREE.LineBasicMaterial({color: blue}));\r\n    this.renderLine(leftBottomBack, leftTopBack, new THREE.LineBasicMaterial({color: red}));\r\n\r\n    this.renderText(\"X\", 102.5, -100, -100, green);\r\n    this.renderText(\"Y\", -100, -100, 102.5, blue);\r\n    this.renderText(\"Z\", -100, 102.5, -100, red);\r\n  }\r\n\r\n  renderLine(startVec, endVec, material){\r\n    const linePoints = [startVec, endVec];\r\n    const lineGeometry = new THREE.BufferGeometry().setFromPoints(linePoints);\r\n    const line = new THREE.Line(lineGeometry, material);\r\n    this.scene.add(line);\r\n  }\r\n\r\n  renderText(string, x, y, z, color){\r\n    const text = new SpriteText(string, 6, color);\r\n    text.position.x = x;\r\n    text.position.y = y;\r\n    text.position.z = z;\r\n    text.fontFace = \"Consolas\";\r\n    this.scene.add(text);\r\n  }\r\n\r\n  renderExpression(){\r\n    const expPoints = this.evaluateExpression();\r\n\r\n    this.expressionGroup = new THREE.Group();\r\n\r\n    for(let i=-80; i<100; i+=20){\r\n      this.expressionGroup.add(this.createAxisUnit(this.rangeScale(i, -100, 100, this.xRange[0], this.xRange[1]), i, -105, -105, green));\r\n      this.expressionGroup.add(this.createAxisUnit(this.rangeScale(i, -100, 100, this.yRange[0], this.yRange[1]), -105, -105, i, blue));\r\n      this.expressionGroup.add(this.createAxisUnit(this.rangeScale(i, -100, 100, this.zRange[0], this.zRange[1]), -105, i, -105, red));\r\n    }\r\n\r\n    if(this.renderingFeatures[\"points\"]){\r\n      this.expressionGroup.add(this.createExpressionDots(expPoints));\r\n    }\r\n\r\n    for(let x=0; x<expPoints.length; x++){\r\n      for(let y=0; y<expPoints[x].length; y++){\r\n        if(this.renderingFeatures[\"squares\"]){\r\n          const expSquares = this.createExpressionSquare(expPoints, x, y);\r\n          if(expSquares != null){\r\n            this.expressionGroup.add(expSquares);\r\n          }\r\n        }\r\n        if(this.renderingFeatures[\"planes\"]){\r\n          const expPlanes = this.createExpressionPlane(expPoints, x, y)\r\n          if(expPlanes != null){\r\n            this.expressionGroup.add(expPlanes);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scene.add(this.expressionGroup);\r\n  }\r\n\r\n  rangeScale(n, nRangeMin, nRangeMax, outRangeMin, outRangeMax){\r\n    return (n - nRangeMin) * (outRangeMax - outRangeMin) / (nRangeMax - nRangeMin) + outRangeMin;\r\n  }\r\n\r\n  evaluateExpression(){\r\n    let expPoints = [];\r\n    const step = (this.xRange[1]-this.xRange[0])/this.detail;\r\n    if(this.expression.includes(\"x\") || this.expression.includes(\"y\")){\r\n      for(let x=this.xRange[0]; x<=this.xRange[1]; x+=step){\r\n        let xEval = this.expression.replaceAll(\"x\", \"(\"+x+\")\");\r\n        let yPoints = [];\r\n        for(let y=this.yRange[0]; y<=this.yRange[1]; y+=step){\r\n          let zEval;\r\n          if(xEval.includes(\"y\")){\r\n            let yEval = xEval.replaceAll(\"y\", \"(\"+y+\")\");\r\n            zEval = evaluate(yEval);\r\n          }\r\n          else{\r\n            zEval = evaluate(xEval);\r\n          }\r\n          if(zEval>=this.zRange[0] && zEval<=this.zRange[1]){\r\n            const xPos = this.rangeScale(x, this.xRange[0], this.xRange[1], -100, 100);\r\n            const yPos = this.rangeScale(zEval, this.zRange[0], this.zRange[1], -100, 100);\r\n            const zPos = this.rangeScale(y, this.yRange[0], this.yRange[1], -100, 100);\r\n            yPoints.push(new THREE.Vector3(xPos, yPos, zPos));\r\n          }\r\n        }\r\n        if(yPoints.length > 0){\r\n          expPoints.push(yPoints);\r\n        }\r\n      }\r\n    }\r\n    return expPoints;\r\n  }\r\n\r\n  createAxisUnit(string, x, y, z, color){\r\n    const text = new SpriteText(string, 4, color);\r\n    text.position.x = x;\r\n    text.position.y = y;\r\n    text.position.z = z;\r\n    text.fontFace = \"Consolas\";\r\n    return text;\r\n  }\r\n\r\n  createExpressionDots(expPoints){\r\n    const points = [].concat.apply([], expPoints);\r\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n    const material = new THREE.PointsMaterial({color: white, size: 0.25});\r\n    return new THREE.Points(geometry, material);\r\n  }\r\n\r\n  createExpressionSquare(expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const material = new THREE.LineBasicMaterial({color: white});\r\n\r\n      const isWholeSquare = expPoints[x+1][y] !== undefined && expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined && expPoints[x][y+1] !== undefined;\r\n      const isClosingTriangle = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const isClosingLine = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let points = null;\r\n      if(isWholeSquare){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingTriangle){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingLine){\r\n        points = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n      }\r\n\r\n      if(points !== null){\r\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        return new THREE.Line(geometry, material);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  createExpressionPlane(expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const firstTriangleValid = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const secondTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const downardsTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let downardsTriangleNeeded = true;\r\n      let planeGeometry = new THREE.BufferGeometry().setFromPoints([]);\r\n      if(firstTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsBottomTriangle = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsBottomTriangle)]);\r\n      }\r\n      if(secondTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsTopTriangle = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y+1]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsTopTriangle)]);\r\n      }\r\n      if(downardsTriangleNeeded && downardsTriangleValid){\r\n        const planePointsDownardsTriangle = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsDownardsTriangle)]);\r\n      }\r\n\r\n      let colour = null;\r\n      if(expPoints[x+1][y+1] !== undefined){\r\n        colour = this.getColourForY(expPoints[x][y].y + (expPoints[x+1][y+1].y - expPoints[x][y].y)/2);\r\n      }\r\n      else{\r\n        colour = this.getColourForY(expPoints[x][y].y);\r\n      }\r\n      const material = new THREE.MeshBasicMaterial({color: colour, side: THREE.DoubleSide});\r\n\r\n      return new THREE.Mesh(planeGeometry, material);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getColourForVector(vector){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    red = Math.round(Math.abs(vector.z) * (255/100));\r\n    blue = Math.round(Math.abs(vector.y) * (255/100));\r\n    green = Math.round(Math.abs(vector.x) * (255/100));\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n\r\n  getColourForY(y){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    if(y>0){\r\n      red = Math.round(y * (255/100));\r\n      green = Math.round(255 - red);\r\n    }\r\n    else{\r\n      blue = Math.round(-y * (255/100));\r\n      green = Math.round(255 - blue);\r\n    }\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n}\r\n","// https://observablehq.com/@kelleyvanevert/projection-of-3d-models-using-javascript-and-html5-canvas\r\n// https://academo.org/demos/3d-surface-plotter/\r\n// https://www.benjoffe.com/code/tools/functions3d/examples\r\n// https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene\r\n// https://threejsfundamentals.org/threejs/lessons/threejs-custom-geometry.html\r\n// https://codepen.io/WebSeed/pen/ZmXxKz\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport Graphics from \"./utils/Graphics.js\"\r\nimport \"./Canvas.css\";\r\n\r\nfunction Canvas(props) {\r\n  const canvas = useRef(null);\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  const graphicsControls = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const graphics = new Graphics(canvas.current, width, height, props.expression, props.detail, props.ranges, props.renderingFeatures);\r\n\r\n    const updateProjection = (expression, detail, ranges, renderingFeatures) => {\r\n      graphics.updateProjection(expression, detail, ranges, renderingFeatures);\r\n    }\r\n\r\n    graphicsControls.current = {updateProjection};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    graphicsControls.current.updateProjection(props.expression, props.detail, props.ranges, props.renderingFeatures);\r\n  }, [props.detail, props.ranges, props.renderingFeatures, props.updateCount]);\r\n\r\n  return (\r\n    <canvas ref={canvas} width={width} height={height} className=\"canvas\">\r\n      <p>Your browser doesn't support canvas.</p>\r\n    </canvas>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport \"./Controls.css\";\r\n\r\n// TODO: Clean this up\r\nfunction Controls(props) {\r\n  return (\r\n    <div className=\"controls\">\r\n      <div className=\"expression\">\r\n        <label>Detail: </label>\r\n        <input type=\"range\" id=\"detail\" name=\"detail\" min=\"10\" max=\"100\" value={props.detail} onChange={props.handleDetailChange} />\r\n\r\n        <label> Z = </label>\r\n        <input type=\"text\" id=\"expression\" name=\"expression\" value={props.expression} onChange={props.handleExpressionChange} />\r\n        <button onClick={props.handleUpdate}>Update</button>\r\n\r\n        <label> X Range: [</label>\r\n        <input type=\"text\" id=\"lowerXRange\" value={props.ranges[0][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>,</label>\r\n        <input type=\"text\" id=\"upperXRange\" value={props.ranges[0][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>]</label>\r\n\r\n        <label> Y Range: [</label>\r\n        <input type=\"text\" id=\"lowerYRange\" value={props.ranges[1][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>,</label>\r\n        <input type=\"text\" id=\"upperYRange\" value={props.ranges[1][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>]</label>\r\n\r\n        <label> Z Range: [</label>\r\n        <input type=\"text\" id=\"lowerZRange\" value={props.ranges[2][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>,</label>\r\n        <input type=\"text\" id=\"upperZRange\" value={props.ranges[2][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>]</label>\r\n\r\n        <label> Points: </label>\r\n        <input id=\"pointsToggle\" type=\"checkbox\" defaultChecked onChange={props.handleRenderingFeatureChange} />\r\n\r\n        <label> Squares: </label>\r\n        <input id=\"squaresToggle\" type=\"checkbox\" defaultChecked onChange={props.handleRenderingFeatureChange} />\r\n\r\n        <label> Planes: </label>\r\n        <input id=\"planesToggle\" type=\"checkbox\" defaultChecked onChange={props.handleRenderingFeatureChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import { useState } from 'react';\r\nimport Canvas from './components/canvas/Canvas.js';\r\nimport Controls from './components/controls/Controls.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [updateCount, setUpdateCount] = useState(0);\r\n  const [detail, setDetail] = useState(50);\r\n  const [expression, setExpression] = useState(\"1-abs(x+y)-abs(y-x)\");\r\n  const [ranges, setRanges] = useState([[\"-100\", \"100\"], [\"-100\", \"100\"], [\"-100\", \"100\"]]);\r\n  const [renderingFeatures, setRenderingFeatures] = useState({\"points\":true, \"squares\":true, \"planes\":true});\r\n\r\n  const handleDetailChange = (event) => {\r\n    setDetail(event.target.value);\r\n  }\r\n\r\n  const handleExpressionChange = (event) => {\r\n    setExpression(event.target.value);\r\n  }\r\n\r\n  const handleRangeChange = (event) => {\r\n    const newRanges = [...ranges];\r\n    switch(event.target.id){\r\n      case \"lowerXRange\":\r\n        newRanges[0][0] = event.target.value;\r\n        break;\r\n      case \"upperXRange\":\r\n        newRanges[0][1] = event.target.value;\r\n        break;\r\n      case \"lowerYRange\":\r\n        newRanges[1][0] = event.target.value;\r\n        break;\r\n      case \"upperYRange\":\r\n        newRanges[1][1] = event.target.value;\r\n        break;\r\n      case \"lowerZRange\":\r\n        newRanges[2][0] = event.target.value;\r\n        break;\r\n      case \"upperZRange\":\r\n        newRanges[2][1] = event.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setRanges(newRanges);\r\n  }\r\n\r\n  const handleRenderingFeatureChange = (event) => {\r\n    const newRenderingFeatures = JSON.parse(JSON.stringify(renderingFeatures));\r\n    switch(event.target.id){\r\n      case \"pointsToggle\":\r\n        newRenderingFeatures[\"points\"] = event.target.checked;\r\n        break;\r\n      case \"squaresToggle\":\r\n        newRenderingFeatures[\"squares\"] = event.target.checked;\r\n        break;\r\n      case \"planesToggle\":\r\n        newRenderingFeatures[\"planes\"] = event.target.checked;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setRenderingFeatures(newRenderingFeatures);\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    setUpdateCount(updateCount + 1);\r\n  }\r\n\r\n  // TODO: Make a reducer for all these states\r\n  return (\r\n    <div className=\"App\">\r\n      <Canvas\r\n        detail={detail}\r\n        expression={expression}\r\n        ranges={ranges}\r\n        renderingFeatures={renderingFeatures}\r\n        updateCount={updateCount}\r\n      />\r\n      <Controls\r\n        detail={detail}\r\n        handleDetailChange={handleDetailChange}\r\n        expression={expression}\r\n        handleExpressionChange={handleExpressionChange}\r\n        ranges={ranges}\r\n        handleRangeChange={handleRangeChange}\r\n        handleRenderingFeatureChange={handleRenderingFeatureChange}\r\n        handleUpdate={handleUpdate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}