{"version":3,"sources":["components/canvas/utils/Graphics.js","components/canvas/Canvas.js","components/controls/Controls.js","App.js","index.js"],"names":["white","green","blue","red","whiteMaterial","THREE","color","greenMaterial","blueMaterial","redMaterial","rightBottomBack","leftTopBack","leftBottomBack","leftBottomFront","Graphics","canvas","width","height","expression","detail","ranges","renderingMethod","this","xRange","parseInt","yRange","zRange","scene","camera","position","set","renderer","antialias","setSize","setClearColor","controls","OrbitControls","domElement","target","renderAxes","renderExpression","animate","requestAnimationFrame","render","update","remove","expressionGroup","add","createLine","createText","expPoints","evaluateExpression","startVec","endVec","i","rangeScale","createExpressionDots","x","length","y","expSquares","createExpressionSquare","expPlanes","createExpressionPlane","n","nRangeMin","nRangeMax","outRangeMin","outRangeMax","xPoints","step","includes","xEval","replaceAll","yPoints","zEval","yEval","evaluate","xPos","yPos","zPos","push","e","alert","material","linePoints","lineGeometry","setFromPoints","string","size","z","text","SpriteText","fontFace","points","concat","apply","geometry","undefined","isWholeSquare","isClosingTriangle","isClosingLine","firstTriangleValid","secondTriangleValid","downardsTriangleValid","downardsTriangleNeeded","planeGeometry","planePointsBottomTriangle","BufferGeometryUtils","mergeBufferGeometries","planePointsTopTriangle","planePointsDownardsTriangle","colour","getColourForY","side","vector","Math","round","abs","Canvas","props","useRef","window","innerWidth","innerHeight","graphicsControls","useEffect","graphics","current","updateProjection","renderingFeatures","updateCount","ref","className","Controls","useState","detailSliderDisabled","setDetailSliderDisabled","isOpen","disableAutoFocus","type","id","style","marginLeft","value","onChange","handleExpressionChange","handleRangeChange","padding","onClick","handleUpdate","event","handleRenderingMethodChange","disabled","name","min","max","handleDetailChange","App","setUpdateCount","setDetail","setExpression","setRanges","setRenderingMethod","document","title","newRanges","testExp","isNaN","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4266e266.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BufferGeometryUtils } from \"three/examples/jsm/utils/BufferGeometryUtils.js\";\r\n\r\nimport SpriteText from 'three-spritetext';\r\n\r\nimport { evaluate } from 'mathjs'\r\n\r\nconst black = \"rgb(40, 44, 52)\";\r\nconst white = \"rgb(255, 255, 255)\";\r\nconst green = \"rgb(25, 207, 41)\"\r\nconst blue = \"rgb(35, 151, 235)\";\r\nconst red = \"rgb(199, 24, 24)\";\r\n\r\nconst whiteMaterial = new THREE.LineBasicMaterial({color: white});\r\nconst greenMaterial = new THREE.LineBasicMaterial({color: green});\r\nconst blueMaterial = new THREE.LineBasicMaterial({color: blue});\r\nconst redMaterial  = new THREE.LineBasicMaterial({color: red});\r\n\r\nconst rightBottomBack = new THREE.Vector3(100, -100, -100);\r\nconst leftTopBack = new THREE.Vector3(-100, 100, -100);\r\nconst leftBottomBack = new THREE.Vector3(-100, -100, -100);\r\nconst leftBottomFront = new THREE.Vector3(-100, -100, 100);\r\n\r\nexport default class Graphics{\r\n  constructor(canvas, width, height, expression, detail, ranges, renderingMethod){\r\n    this.expression = expression;\r\n    this.detail = detail;\r\n    this.xRange = [parseInt(ranges[0][0]), parseInt(ranges[0][1])];\r\n    this.yRange = [parseInt(ranges[1][0]), parseInt(ranges[1][1])];\r\n    this.zRange = [parseInt(ranges[2][0]), parseInt(ranges[2][1])];\r\n    this.renderingMethod = renderingMethod;\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(45, width/height, 0.1, 1000);\r\n    this.camera.position.set(250, 150, 250);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setClearColor(black);\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.target = new THREE.Vector3(0, 25, 0);\r\n\r\n    this.renderAxes();\r\n    this.renderExpression();\r\n\r\n    const animate = () => {\r\n    \trequestAnimationFrame(animate);\r\n    \tthis.renderer.render(this.scene, this.camera);\r\n      this.controls.update();\r\n    }\r\n\r\n    animate();\r\n  }\r\n\r\n  updateProjection(expression, detail, ranges, renderingMethod){\r\n    if(this.expression !== expression || this.detail !== detail || this.ranges !== ranges || this.renderingMethod !== renderingMethod){\r\n      this.expression = expression;\r\n      this.detail = detail;\r\n      this.xRange = [parseInt(ranges[0][0]), parseInt(ranges[0][1])];\r\n      this.yRange = [parseInt(ranges[1][0]), parseInt(ranges[1][1])];\r\n      this.zRange = [parseInt(ranges[2][0]), parseInt(ranges[2][1])];\r\n      this.renderingMethod = renderingMethod;\r\n      this.scene.remove(this.expressionGroup);\r\n      this.renderExpression();\r\n    }\r\n  }\r\n\r\n  renderAxes(){\r\n    this.scene.add(this.createLine(leftBottomBack, rightBottomBack, greenMaterial));\r\n    this.scene.add(this.createLine(leftBottomBack, leftBottomFront, blueMaterial));\r\n    this.scene.add(this.createLine(leftBottomBack, leftTopBack, redMaterial));\r\n\r\n    this.scene.add(this.createText(\"X\", 6, 102.5, -100, -100, green));\r\n    this.scene.add(this.createText(\"Y\", 6, -100, -100, 102.5, blue));\r\n    this.scene.add(this.createText(\"Z\", 6, -100, 102.5, -100, red));\r\n  }\r\n\r\n  renderExpression(){\r\n    const expPoints = this.evaluateExpression();\r\n\r\n    this.expressionGroup = new THREE.Group();\r\n\r\n    const startVec = new THREE.Vector3(0, 0, 0);\r\n    const endVec = new THREE.Vector3(0, 0, 0);\r\n    for(let i=-80; i<100; i+=20){\r\n      this.expressionGroup.add(this.createText(this.rangeScale(i, -100, 100, this.xRange[0], this.xRange[1]), 4, i, -100, -110, green));\r\n      this.expressionGroup.add(this.createLine(startVec.set(i, -100, -100), endVec.set(i, -100, -105), greenMaterial));\r\n      this.expressionGroup.add(this.createText(this.rangeScale(i, -100, 100, this.yRange[0], this.yRange[1]), 4, -110, -100, i, blue));\r\n      this.expressionGroup.add(this.createLine(startVec.set(-100, -100, i), endVec.set(-105, -100, i), blueMaterial));\r\n      this.expressionGroup.add(this.createText(this.rangeScale(i, -100, 100, this.zRange[0], this.zRange[1]), 4, -110, i, -110, red));\r\n      this.expressionGroup.add(this.createLine(startVec.set(-100, i, -100), endVec.set(-105, i, -105), redMaterial));\r\n    }\r\n\r\n    if(this.renderingMethod === \"vertices\"){\r\n      this.expressionGroup.add(this.createExpressionDots(expPoints));\r\n    }\r\n\r\n    if(this.renderingMethod === \"edges\"){\r\n      for(let x=0; x<expPoints.length; x++){\r\n        for(let y=0; y<expPoints[x].length; y++){\r\n          const expSquares = this.createExpressionSquare(expPoints, x, y);\r\n          if(expSquares != null){\r\n            this.expressionGroup.add(expSquares);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if(this.renderingMethod === \"faces\"){\r\n      for(let x=0; x<expPoints.length; x++){\r\n        for(let y=0; y<expPoints[x].length; y++){\r\n          const expPlanes = this.createExpressionPlane(expPoints, x, y)\r\n          if(expPlanes != null){\r\n            this.expressionGroup.add(expPlanes);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scene.add(this.expressionGroup);\r\n  }\r\n\r\n  rangeScale(n, nRangeMin, nRangeMax, outRangeMin, outRangeMax){\r\n    return (n - nRangeMin) * (outRangeMax - outRangeMin) / (nRangeMax - nRangeMin) + outRangeMin;\r\n  }\r\n\r\n  evaluateExpression(){\r\n    let xPoints = [];\r\n    const step = (this.xRange[1]-this.xRange[0])/this.detail;\r\n\r\n    if(this.expression.includes(\"x\") || this.expression.includes(\"y\")){\r\n      try{\r\n        for(let x=this.xRange[0]; x<=this.xRange[1]; x+=step){\r\n          let xEval = this.expression.replaceAll(\"x\", \"(\"+x+\")\");\r\n          let yPoints = [];\r\n\r\n          for(let y=this.yRange[0]; y<=this.yRange[1]; y+=step){\r\n            let zEval;\r\n\r\n            if(xEval.includes(\"y\")){\r\n              let yEval = xEval.replaceAll(\"y\", \"(\"+y+\")\");\r\n              zEval = evaluate(yEval);\r\n            }\r\n            else{\r\n              zEval = evaluate(xEval);\r\n            }\r\n\r\n            if(zEval>=this.zRange[0] && zEval<=this.zRange[1]){\r\n              const xPos = this.rangeScale(x, this.xRange[0], this.xRange[1], -100, 100);\r\n              const yPos = this.rangeScale(zEval, this.zRange[0], this.zRange[1], -100, 100);\r\n              const zPos = this.rangeScale(y, this.yRange[0], this.yRange[1], -100, 100);\r\n              yPoints.push(new THREE.Vector3(xPos, yPos, zPos));\r\n            }\r\n          }\r\n\r\n          if(yPoints.length > 0){\r\n            xPoints.push(yPoints);\r\n          }\r\n        }\r\n      } catch(e) {\r\n        alert(\"Error when solving for Z: \" + e);\r\n      }\r\n    }\r\n\r\n    return xPoints;\r\n  }\r\n\r\n  createLine(startVec, endVec, material){\r\n    const linePoints = [startVec, endVec];\r\n    const lineGeometry = new THREE.BufferGeometry().setFromPoints(linePoints);\r\n    const line = new THREE.Line(lineGeometry, material);\r\n    return line;\r\n  }\r\n\r\n  createText(string, size, x, y, z, color){\r\n    const text = new SpriteText(string, size, color);\r\n    text.position.x = x;\r\n    text.position.y = y;\r\n    text.position.z = z;\r\n    text.fontFace = \"Consolas\";\r\n    return text;\r\n  }\r\n\r\n  createAxisUnit(string, x, y, z, color){\r\n    const text = new SpriteText(string, 4, color);\r\n    text.position.x = x;\r\n    text.position.y = y;\r\n    text.position.z = z;\r\n    text.fontFace = \"Consolas\";\r\n    return text;\r\n  }\r\n\r\n  createExpressionDots(expPoints){\r\n    const points = [].concat.apply([], expPoints);\r\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n    const material = new THREE.PointsMaterial({color: white, size: 0.25});\r\n    return new THREE.Points(geometry, material);\r\n  }\r\n\r\n  createExpressionSquare(expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const isWholeSquare = expPoints[x+1][y] !== undefined && expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined && expPoints[x][y+1] !== undefined;\r\n      const isClosingTriangle = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const isClosingLine = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let points = null;\r\n      if(isWholeSquare){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingTriangle){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingLine){\r\n        points = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n      }\r\n\r\n      if(points !== null){\r\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        return new THREE.Line(geometry, whiteMaterial);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  createExpressionPlane(expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const firstTriangleValid = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const secondTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const downardsTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let downardsTriangleNeeded = true;\r\n      let planeGeometry = new THREE.BufferGeometry().setFromPoints([]);\r\n      if(firstTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsBottomTriangle = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsBottomTriangle)]);\r\n      }\r\n      if(secondTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsTopTriangle = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y+1]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsTopTriangle)]);\r\n      }\r\n      if(downardsTriangleNeeded && downardsTriangleValid){\r\n        const planePointsDownardsTriangle = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsDownardsTriangle)]);\r\n      }\r\n\r\n      let colour = null;\r\n      if(expPoints[x+1][y+1] !== undefined){\r\n        colour = this.getColourForY(expPoints[x][y].y + (expPoints[x+1][y+1].y - expPoints[x][y].y)/2);\r\n      }\r\n      else{\r\n        colour = this.getColourForY(expPoints[x][y].y);\r\n      }\r\n      const material = new THREE.MeshBasicMaterial({color: colour, side: THREE.DoubleSide});\r\n\r\n      return new THREE.Mesh(planeGeometry, material);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getColourForVector(vector){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    red = Math.round(Math.abs(vector.z) * (255/100));\r\n    blue = Math.round(Math.abs(vector.y) * (255/100));\r\n    green = Math.round(Math.abs(vector.x) * (255/100));\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n\r\n  getColourForY(y){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    if(y>0){\r\n      red = Math.round(y * (255/100));\r\n      green = Math.round(255 - red);\r\n    }\r\n    else{\r\n      blue = Math.round(-y * (255/100));\r\n      green = Math.round(255 - blue);\r\n    }\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n}\r\n","// https://observablehq.com/@kelleyvanevert/projection-of-3d-models-using-javascript-and-html5-canvas\r\n// https://academo.org/demos/3d-surface-plotter/\r\n// https://www.benjoffe.com/code/tools/functions3d/examples\r\n// https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene\r\n// https://threejsfundamentals.org/threejs/lessons/threejs-custom-geometry.html\r\n// https://codepen.io/WebSeed/pen/ZmXxKz\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport Graphics from \"./utils/Graphics.js\"\r\nimport \"./Canvas.css\";\r\n\r\nfunction Canvas(props) {\r\n  const canvas = useRef(null);\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  const graphicsControls = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const graphics = new Graphics(canvas.current, width, height, props.expression, props.detail, props.ranges, props.renderingMethod);\r\n\r\n    const updateProjection = (expression, detail, ranges, renderingFeatures) => {\r\n      graphics.updateProjection(expression, detail, ranges, renderingFeatures);\r\n    }\r\n\r\n    graphicsControls.current = {updateProjection};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    graphicsControls.current.updateProjection(props.expression, props.detail, props.ranges, props.renderingMethod);\r\n  }, [props.detail, props.renderingMethod, props.updateCount]);\r\n\r\n  return (\r\n    <canvas ref={canvas} width={width} height={height} className=\"canvas\">\r\n      <p>Your browser doesn't support canvas.</p>\r\n    </canvas>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport \"./Controls.css\";\r\n\r\n// TODO: Clean this up\r\nfunction Controls(props) {\r\n  const [detailSliderDisabled, setDetailSliderDisabled] = useState(true);\r\n\r\n  const handleRenderingMethodChange = (event) => {\r\n    props.handleRenderingMethodChange(event);\r\n    if(event.target.value === \"vertices\"){\r\n      setDetailSliderDisabled(false);\r\n    } else {\r\n      setDetailSliderDisabled(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Menu isOpen disableAutoFocus width={375}>\r\n      <label className=\"centered large-print\">\r\n          Projection\r\n      </label>\r\n      <label className=\"centered\">\r\n          Z =\r\n          <input type=\"text\" id=\"expression\" style={{marginLeft: \"0.25em\"}} value={props.expression} onChange={props.handleExpressionChange} />\r\n      </label>\r\n      <label className=\"centered\">\r\n        X Range:[\r\n        <input type=\"text\" id=\"lowerXRange\" value={props.ranges[0][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        ,\r\n        <input type=\"text\" id=\"upperXRange\" value={props.ranges[0][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        ]\r\n      </label>\r\n      <label className=\"centered\">\r\n        Y Range:[\r\n        <input type=\"text\" id=\"lowerYRange\" value={props.ranges[1][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        ,\r\n        <input type=\"text\" id=\"upperYRange\" value={props.ranges[1][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        ]\r\n      </label>\r\n      <label className=\"centered\">\r\n        Z Range:[\r\n        <input type=\"text\" id=\"lowerZRange\" value={props.ranges[2][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        ,\r\n        <input type=\"text\" id=\"upperZRange\" value={props.ranges[2][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        ]\r\n      </label>\r\n      <label className=\"centered large-print underlined\" style={{padding: \"1em 0\"}}>\r\n          <button onClick={props.handleUpdate}>Update</button>\r\n      </label>\r\n\r\n      <label className=\"centered large-print\">\r\n          Graphics\r\n      </label>\r\n      <label className=\"centered\">\r\n          Render Method:\r\n          <select id=\"render-method-dropdown\" value={props.renderingMethod} style={{marginLeft: \"0.25em\"}} onChange={handleRenderingMethodChange}>\r\n            <option value=\"vertices\">Vertices</option>\r\n            <option value=\"edges\">Edges</option>\r\n            <option value=\"faces\">Faces</option>\r\n          </select>\r\n      </label>\r\n      <label className=\"centered\">\r\n        Max Vertices:\r\n        <input type=\"range\" disabled={detailSliderDisabled} id=\"detail\" name=\"detail\" min=\"10\" max=\"100\" value={props.detail} onChange={props.handleDetailChange} />\r\n        {props.detail * props.detail}\r\n      </label>\r\n      <label className=\"centered underlined\" style={{padding: \"1em 0\"}}>\r\n        Max Vertices slider is only enabled with the Vertices rendering method.\r\n      </label>\r\n\r\n      <label className=\"centered large-print\">\r\n          Camera\r\n      </label>\r\n      <label className=\"centered underlined\" style={{padding: \"1em 0\"}}>\r\n        Left click and hold to rotate the camera around the projection.\r\n        Right click and hold to move the camera sideways.\r\n        Scroll to move the camera forwards or backwards.\r\n      </label>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import { useState, useEffect } from 'react';\r\nimport Canvas from './components/canvas/Canvas.js';\r\nimport Controls from './components/controls/Controls.js';\r\n\r\nimport { evaluate } from 'mathjs'\r\n\r\nfunction App() {\r\n  const [updateCount, setUpdateCount] = useState(0);\r\n  const [detail, setDetail] = useState(50);\r\n  const [expression, setExpression] = useState(\"x^2+y^2\");\r\n  const [ranges, setRanges] = useState([[\"-100\", \"100\"], [\"-100\", \"100\"], [\"0\", \"20000\"]]);\r\n  const [renderingMethod, setRenderingMethod] = useState(\"faces\");\r\n\r\n  useEffect(() => {\r\n    document.title = \"Function Projector\"\r\n  }, []);\r\n\r\n  const handleDetailChange = (event) => {\r\n    setDetail(event.target.value);\r\n  }\r\n\r\n  const handleExpressionChange = (event) => {\r\n    setExpression(event.target.value);\r\n  }\r\n\r\n  const handleRangeChange = (event) => {\r\n    const newRanges = [...ranges];\r\n    switch(event.target.id){\r\n      case \"lowerXRange\":\r\n        newRanges[0][0] = event.target.value;\r\n        break;\r\n      case \"upperXRange\":\r\n        newRanges[0][1] = event.target.value;\r\n        break;\r\n      case \"lowerYRange\":\r\n        newRanges[1][0] = event.target.value;\r\n        break;\r\n      case \"upperYRange\":\r\n        newRanges[1][1] = event.target.value;\r\n        break;\r\n      case \"lowerZRange\":\r\n        newRanges[2][0] = event.target.value;\r\n        break;\r\n      case \"upperZRange\":\r\n        newRanges[2][1] = event.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setRanges(newRanges);\r\n  }\r\n\r\n  const handleRenderingMethodChange = (event) => {\r\n    setRenderingMethod(event.target.value);\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    try{\r\n      const testExp = expression.replaceAll(\"x\", \"(\"+1+\")\").replaceAll(\"y\", \"(\"+1+\")\");\r\n      const testEval = evaluate(testExp);\r\n    } catch(e) {\r\n      alert(\"Error when solving for Z: \" + e);\r\n    }\r\n\r\n    if(isNaN(parseInt(ranges[0][0]))){\r\n      alert(\"Lower X Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[0][1]))){\r\n      alert(\"Upper X Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[1][0]))){\r\n      alert(\"Lower Y Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[1][1]))){\r\n      alert(\"Upper Y Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[2][0]))){\r\n      alert(\"Lower Z Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[2][1]))){\r\n      alert(\"Upper Z Range invalid\");\r\n      return;\r\n    }\r\n\r\n    if(parseInt(ranges[0][0]) > parseInt(ranges[0][1])){\r\n      alert(\"Lower X Range must be less than Upper X Range.\");\r\n      return;\r\n    }\r\n    if(parseInt(ranges[1][0]) > parseInt(ranges[1][1])){\r\n      alert(\"Lower Y Range must be less than Upper Y Range.\");\r\n      return;\r\n    }\r\n    if(parseInt(ranges[2][0]) > parseInt(ranges[2][1])){\r\n      alert(\"Lower Z Range must be less than Upper Z Range.\");\r\n      return;\r\n    }\r\n\r\n    setUpdateCount(updateCount + 1);\r\n  }\r\n\r\n  // TODO: Make a reducer for all these states\r\n  return (\r\n    <div className=\"App\">\r\n      <Canvas\r\n        detail={detail}\r\n        expression={expression}\r\n        ranges={ranges}\r\n        renderingMethod={renderingMethod}\r\n        updateCount={updateCount}\r\n      />\r\n      <Controls\r\n        detail={detail}\r\n        handleDetailChange={handleDetailChange}\r\n        expression={expression}\r\n        handleExpressionChange={handleExpressionChange}\r\n        ranges={ranges}\r\n        handleRangeChange={handleRangeChange}\r\n        renderingMethod={renderingMethod}\r\n        handleRenderingMethodChange={handleRenderingMethodChange}\r\n        handleUpdate={handleUpdate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}