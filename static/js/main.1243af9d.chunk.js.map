{"version":3,"sources":["components/canvas/utils/Graphics.js","components/canvas/Canvas.js","components/controls/Controls.js","App.js","index.js"],"names":["white","green","blue","red","whiteMaterial","THREE","color","greenMaterial","blueMaterial","redMaterial","rightBottomBack","leftTopBack","leftBottomBack","leftBottomFront","Graphics","canvas","width","height","expression","axes","detail","ranges","renderingMethod","this","xRange","parseInt","yRange","zRange","scene","camera","position","set","renderer","antialias","setSize","setClearColor","controls","OrbitControls","domElement","target","render","animate","requestAnimationFrame","update","remove","expressionGroup","expPoints","evaluateExpression","add","createLine","createText","startVec","endVec","i","rangeScale","createExpressionDots","x","length","y","expSquares","createExpressionSquare","expPlanes","createExpressionPlane","n","nRangeMin","nRangeMax","outRangeMin","outRangeMax","xPoints","step","includes","xEval","replaceAll","yPoints","zEval","yEval","evaluate","xPos","yPos","zPos","push","e","alert","material","linePoints","lineGeometry","setFromPoints","string","size","z","text","SpriteText","fontFace","points","concat","apply","geometry","undefined","isWholeSquare","isClosingTriangle","isClosingLine","firstTriangleValid","secondTriangleValid","downardsTriangleValid","downardsTriangleNeeded","planeGeometry","planePointsBottomTriangle","BufferGeometryUtils","mergeBufferGeometries","planePointsTopTriangle","planePointsDownardsTriangle","colour","getColourForY","side","vector","Math","round","abs","Canvas","props","useState","loading","setLoading","useRef","window","innerWidth","innerHeight","graphicsControls","useEffect","graphics","current","renderingFeatures","updateCount","style","top","left","pointerEvents","margin","font","transform","getLoadingMessage","ref","className","Controls","detailSliderDisabled","setDetailSliderDisabled","isOpen","disableAutoFocus","type","id","value","onChange","handleExpressionChange","handleRangeChange","onClick","handleUpdate","defaultChecked","handleAxesChange","event","handleRenderingMethodChange","disabled","name","min","max","handleDetailChange","App","setUpdateCount","setDetail","setExpression","setRanges","setAxes","setRenderingMethod","document","title","newRanges","checked","testExp","isNaN","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1243af9d.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BufferGeometryUtils } from \"three/examples/jsm/utils/BufferGeometryUtils.js\";\r\n\r\nimport SpriteText from 'three-spritetext';\r\n\r\nimport { evaluate } from 'mathjs'\r\n\r\nconst black = \"rgb(40, 44, 52)\";\r\nconst white = \"rgb(255, 255, 255)\";\r\nconst green = \"rgb(25, 207, 41)\"\r\nconst blue = \"rgb(35, 151, 235)\";\r\nconst red = \"rgb(199, 24, 24)\";\r\n\r\nconst whiteMaterial = new THREE.LineBasicMaterial({color: white});\r\nconst greenMaterial = new THREE.LineBasicMaterial({color: green});\r\nconst blueMaterial = new THREE.LineBasicMaterial({color: blue});\r\nconst redMaterial  = new THREE.LineBasicMaterial({color: red});\r\n\r\nconst rightBottomBack = new THREE.Vector3(100, -100, -100);\r\nconst leftTopBack = new THREE.Vector3(-100, 100, -100);\r\nconst leftBottomBack = new THREE.Vector3(-100, -100, -100);\r\nconst leftBottomFront = new THREE.Vector3(-100, -100, 100);\r\n\r\nexport default class Graphics{\r\n  constructor(canvas, width, height, expression, axes, detail, ranges, renderingMethod){\r\n    this.expression = expression;\r\n    this.axes = axes;\r\n    this.detail = detail;\r\n    this.xRange = [parseInt(ranges[0][0]), parseInt(ranges[0][1])];\r\n    this.yRange = [parseInt(ranges[1][0]), parseInt(ranges[1][1])];\r\n    this.zRange = [parseInt(ranges[2][0]), parseInt(ranges[2][1])];\r\n    this.renderingMethod = renderingMethod;\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(45, width/height, 0.1, 1000);\r\n    this.camera.position.set(250, 150, 250);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setClearColor(black);\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.target = new THREE.Vector3(0, 25, 0);\r\n\r\n    this.render();\r\n\r\n    const animate = () => {\r\n    \trequestAnimationFrame(animate);\r\n    \tthis.renderer.render(this.scene, this.camera);\r\n      this.controls.update();\r\n    }\r\n\r\n    animate();\r\n  }\r\n\r\n  update(expression, axes, detail, ranges, renderingMethod){\r\n    if(this.expression !== expression || this.axes !== axes || this.detail !== detail || this.ranges !== ranges || this.renderingMethod !== renderingMethod){\r\n      this.expression = expression;\r\n      this.axes = axes;\r\n      this.detail = detail;\r\n      this.xRange = [parseInt(ranges[0][0]), parseInt(ranges[0][1])];\r\n      this.yRange = [parseInt(ranges[1][0]), parseInt(ranges[1][1])];\r\n      this.zRange = [parseInt(ranges[2][0]), parseInt(ranges[2][1])];\r\n      this.renderingMethod = renderingMethod;\r\n      this.scene.remove(this.expressionGroup);\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const expPoints = this.evaluateExpression();\r\n\r\n    this.expressionGroup = new THREE.Group();\r\n\r\n    if(this.axes){\r\n      this.expressionGroup.add(this.createLine(leftBottomBack, rightBottomBack, greenMaterial));\r\n      this.expressionGroup.add(this.createLine(leftBottomBack, leftBottomFront, blueMaterial));\r\n      this.expressionGroup.add(this.createLine(leftBottomBack, leftTopBack, redMaterial));\r\n\r\n      this.expressionGroup.add(this.createText(\"X\", 6, 102.5, -100, -100, green));\r\n      this.expressionGroup.add(this.createText(\"Y\", 6, -100, -100, 102.5, blue));\r\n      this.expressionGroup.add(this.createText(\"Z\", 6, -100, 102.5, -100, red));\r\n\r\n      const startVec = new THREE.Vector3(0, 0, 0);\r\n      const endVec = new THREE.Vector3(0, 0, 0);\r\n      for(let i=-80; i<100; i+=20){\r\n        this.expressionGroup.add(this.createText(this.rangeScale(i, -100, 100, this.xRange[0], this.xRange[1]), 4, i, -100, -110, green));\r\n        this.expressionGroup.add(this.createText(this.rangeScale(i, -100, 100, this.yRange[0], this.yRange[1]), 4, -110, -100, i, blue));\r\n        this.expressionGroup.add(this.createText(this.rangeScale(i, -100, 100, this.zRange[0], this.zRange[1]), 4, -110, i, -110, red));\r\n\r\n        this.expressionGroup.add(this.createLine(startVec.set(i, -100, -100), endVec.set(i, -100, -105), greenMaterial));\r\n        this.expressionGroup.add(this.createLine(startVec.set(-100, -100, i), endVec.set(-105, -100, i), blueMaterial));\r\n        this.expressionGroup.add(this.createLine(startVec.set(-100, i, -100), endVec.set(-105, i, -105), redMaterial));\r\n      }\r\n    }\r\n\r\n    if(this.renderingMethod === \"vertices\"){\r\n      this.expressionGroup.add(this.createExpressionDots(expPoints));\r\n    }\r\n\r\n    if(this.renderingMethod === \"edges\"){\r\n      for(let x=0; x<expPoints.length; x++){\r\n        for(let y=0; y<expPoints[x].length; y++){\r\n          const expSquares = this.createExpressionSquare(expPoints, x, y);\r\n          if(expSquares != null){\r\n            this.expressionGroup.add(expSquares);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if(this.renderingMethod === \"faces\"){\r\n      for(let x=0; x<expPoints.length; x++){\r\n        for(let y=0; y<expPoints[x].length; y++){\r\n          const expPlanes = this.createExpressionPlane(expPoints, x, y)\r\n          if(expPlanes != null){\r\n            this.expressionGroup.add(expPlanes);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scene.add(this.expressionGroup);\r\n  }\r\n\r\n  rangeScale(n, nRangeMin, nRangeMax, outRangeMin, outRangeMax){\r\n    return (n - nRangeMin) * (outRangeMax - outRangeMin) / (nRangeMax - nRangeMin) + outRangeMin;\r\n  }\r\n\r\n  evaluateExpression(){\r\n    let xPoints = [];\r\n    const step = (this.xRange[1]-this.xRange[0])/this.detail;\r\n\r\n    if(this.expression.includes(\"x\") || this.expression.includes(\"y\")){\r\n      try{\r\n        for(let x=this.xRange[0]; x<=this.xRange[1]; x+=step){\r\n          let xEval = this.expression.replaceAll(\"x\", \"(\"+x+\")\");\r\n          let yPoints = [];\r\n\r\n          for(let y=this.yRange[0]; y<=this.yRange[1]; y+=step){\r\n            let zEval;\r\n\r\n            if(xEval.includes(\"y\")){\r\n              let yEval = xEval.replaceAll(\"y\", \"(\"+y+\")\");\r\n              zEval = evaluate(yEval);\r\n            }\r\n            else{\r\n              zEval = evaluate(xEval);\r\n            }\r\n\r\n            if(zEval>=this.zRange[0] && zEval<=this.zRange[1]){\r\n              const xPos = this.rangeScale(x, this.xRange[0], this.xRange[1], -100, 100);\r\n              const yPos = this.rangeScale(zEval, this.zRange[0], this.zRange[1], -100, 100);\r\n              const zPos = this.rangeScale(y, this.yRange[0], this.yRange[1], -100, 100);\r\n              yPoints.push(new THREE.Vector3(xPos, yPos, zPos));\r\n            }\r\n          }\r\n\r\n          if(yPoints.length > 0){\r\n            xPoints.push(yPoints);\r\n          }\r\n        }\r\n      } catch(e) {\r\n        alert(\"Error when solving for Z: \" + e);\r\n      }\r\n    }\r\n\r\n    return xPoints;\r\n  }\r\n\r\n  createLine(startVec, endVec, material){\r\n    const linePoints = [startVec, endVec];\r\n    const lineGeometry = new THREE.BufferGeometry().setFromPoints(linePoints);\r\n    const line = new THREE.Line(lineGeometry, material);\r\n    return line;\r\n  }\r\n\r\n  createText(string, size, x, y, z, color){\r\n    const text = new SpriteText(string, size, color);\r\n    text.position.x = x;\r\n    text.position.y = y;\r\n    text.position.z = z;\r\n    text.fontFace = \"Consolas\";\r\n    return text;\r\n  }\r\n\r\n  createAxisUnit(string, x, y, z, color){\r\n    const text = new SpriteText(string, 4, color);\r\n    text.position.x = x;\r\n    text.position.y = y;\r\n    text.position.z = z;\r\n    text.fontFace = \"Consolas\";\r\n    return text;\r\n  }\r\n\r\n  createExpressionDots(expPoints){\r\n    const points = [].concat.apply([], expPoints);\r\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n    const material = new THREE.PointsMaterial({color: white, size: 0.25});\r\n    return new THREE.Points(geometry, material);\r\n  }\r\n\r\n  createExpressionSquare(expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const isWholeSquare = expPoints[x+1][y] !== undefined && expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined && expPoints[x][y+1] !== undefined;\r\n      const isClosingTriangle = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const isClosingLine = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let points = null;\r\n      if(isWholeSquare){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingTriangle){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingLine){\r\n        points = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n      }\r\n\r\n      if(points !== null){\r\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        return new THREE.Line(geometry, whiteMaterial);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  createExpressionPlane(expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const firstTriangleValid = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const secondTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const downardsTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let downardsTriangleNeeded = true;\r\n      let planeGeometry = new THREE.BufferGeometry().setFromPoints([]);\r\n      if(firstTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsBottomTriangle = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsBottomTriangle)]);\r\n      }\r\n      if(secondTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsTopTriangle = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y+1]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsTopTriangle)]);\r\n      }\r\n      if(downardsTriangleNeeded && downardsTriangleValid){\r\n        const planePointsDownardsTriangle = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n        planeGeometry = BufferGeometryUtils.mergeBufferGeometries([planeGeometry, new THREE.BufferGeometry().setFromPoints(planePointsDownardsTriangle)]);\r\n      }\r\n\r\n      let colour = null;\r\n      if(expPoints[x+1][y+1] !== undefined){\r\n        colour = this.getColourForY(expPoints[x][y].y + (expPoints[x+1][y+1].y - expPoints[x][y].y)/2);\r\n      }\r\n      else{\r\n        colour = this.getColourForY(expPoints[x][y].y);\r\n      }\r\n      const material = new THREE.MeshBasicMaterial({color: colour, side: THREE.DoubleSide});\r\n\r\n      return new THREE.Mesh(planeGeometry, material);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getColourForVector(vector){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    red = Math.round(Math.abs(vector.z) * (255/100));\r\n    blue = Math.round(Math.abs(vector.y) * (255/100));\r\n    green = Math.round(Math.abs(vector.x) * (255/100));\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n\r\n  getColourForY(y){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    if(y>0){\r\n      red = Math.round(y * (255/100));\r\n      green = Math.round(255 - red);\r\n    }\r\n    else{\r\n      blue = Math.round(-y * (255/100));\r\n      green = Math.round(255 - blue);\r\n    }\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n}\r\n","// https://observablehq.com/@kelleyvanevert/projection-of-3d-models-using-javascript-and-html5-canvas\r\n// https://academo.org/demos/3d-surface-plotter/\r\n// https://www.benjoffe.com/code/tools/functions3d/examples\r\n// https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene\r\n// https://threejsfundamentals.org/threejs/lessons/threejs-custom-geometry.html\r\n// https://codepen.io/WebSeed/pen/ZmXxKz\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Graphics from \"./utils/Graphics.js\";\r\nimport \"./Canvas.css\";\r\n\r\nfunction Canvas(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const canvas = useRef(null);\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  const graphicsControls = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const graphics = new Graphics(canvas.current, width, height, props.expression, props.axes, props.detail, props.ranges, props.renderingMethod);\r\n    setLoading(false);\r\n\r\n    const update = (expression, axes, detail, ranges, renderingFeatures) => {\r\n      setLoading(true);\r\n      graphics.update(expression, axes, detail, ranges, renderingFeatures);\r\n      setLoading(false);\r\n    }\r\n\r\n    graphicsControls.current = {update};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    graphicsControls.current.update(props.expression, props.axes, props.detail, props.ranges, props.renderingMethod);\r\n  }, [props.axes, props.detail, props.renderingMethod, props.updateCount]);\r\n\r\n  const getLoadingMessage = () => {\r\n    if(loading){\r\n      return (\r\n        <div style={{position: \"absolute\", top: \"50%\", left: \"50%\", pointerEvents: \"none\", margin: \"auto\", color: \"rgb(255, 255, 255)\", font: \"60px Consolas\", transform: \"translate(-50%, -50%)\"}}>\r\n          Loading...\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { getLoadingMessage() }\r\n      <canvas ref={canvas} width={width} height={height} className=\"canvas\">\r\n        <p>Your browser doesn't support canvas.</p>\r\n      </canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport \"./Controls.css\";\r\n\r\n// TODO: Clean this up\r\nfunction Controls(props) {\r\n  const [detailSliderDisabled, setDetailSliderDisabled] = useState(true);\r\n\r\n  const handleRenderingMethodChange = (event) => {\r\n    props.handleRenderingMethodChange(event);\r\n    if(event.target.value === \"vertices\"){\r\n      setDetailSliderDisabled(false);\r\n    } else {\r\n      setDetailSliderDisabled(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Menu isOpen disableAutoFocus width={375}>\r\n      <label className=\"centered large-print\">\r\n          Projection\r\n      </label>\r\n      <label className=\"centered\">\r\n          Z =\r\n          <input className=\"small-left-margin\" type=\"text\" id=\"expression\" value={props.expression} onChange={props.handleExpressionChange} />\r\n      </label>\r\n      <label className=\"centered\">\r\n        X Range:[\r\n        <input className=\"range-input\" type=\"text\" id=\"lowerXRange\" value={props.ranges[0][0]} onChange={props.handleRangeChange} />\r\n        ,\r\n        <input className=\"range-input\" type=\"text\" id=\"upperXRange\" value={props.ranges[0][1]} onChange={props.handleRangeChange} />\r\n        ]\r\n      </label>\r\n      <label className=\"centered\">\r\n        Y Range:[\r\n        <input className=\"range-input\" type=\"text\" id=\"lowerYRange\" value={props.ranges[1][0]} onChange={props.handleRangeChange} />\r\n        ,\r\n        <input className=\"range-input\" type=\"text\" id=\"upperYRange\" value={props.ranges[1][1]} onChange={props.handleRangeChange} />\r\n        ]\r\n      </label>\r\n      <label className=\"centered\">\r\n        Z Range:[\r\n        <input className=\"range-input\" type=\"text\" id=\"lowerZRange\" value={props.ranges[2][0]} onChange={props.handleRangeChange} />\r\n        ,\r\n        <input className=\"range-input\" type=\"text\" id=\"upperZRange\" value={props.ranges[2][1]} onChange={props.handleRangeChange} />\r\n        ]\r\n      </label>\r\n      <label className=\"centered large-print underlined\" >\r\n          <button onClick={props.handleUpdate}>Update</button>\r\n      </label>\r\n\r\n      <label className=\"centered large-print\">\r\n          Graphics\r\n      </label>\r\n      <label className=\"centered\" >\r\n        Axes:\r\n        <input id=\"axis-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleAxesChange} />\r\n      </label>\r\n      <label className=\"centered\">\r\n          Render Method:\r\n          <select className=\"small-left-margin\" id=\"render-method-dropdown\" value={props.renderingMethod} onChange={handleRenderingMethodChange}>\r\n            <option value=\"vertices\">Vertices</option>\r\n            <option value=\"edges\">Edges</option>\r\n            <option value=\"faces\">Faces</option>\r\n          </select>\r\n      </label>\r\n      <label className=\"centered\">\r\n        Max Vertices:\r\n        <input type=\"range\" disabled={detailSliderDisabled} id=\"detail\" name=\"detail\" min=\"10\" max=\"100\" value={props.detail} onChange={props.handleDetailChange} />\r\n        {props.detail * props.detail}\r\n      </label>\r\n      <label className=\"centered underlined\">\r\n        Max Vertices slider can only be used with the Vertices rendering method.\r\n      </label>\r\n\r\n      <label className=\"centered large-print\">\r\n          Camera\r\n      </label>\r\n      <label className=\"centered underlined\" >\r\n        Left click and hold to rotate the camera around the projection.\r\n        Right click and hold to move the camera sideways.\r\n        Scroll or hold middle mouse to move the camera forwards or backwards.\r\n      </label>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import { useState, useEffect } from 'react';\r\nimport Canvas from './components/canvas/Canvas.js';\r\nimport Controls from './components/controls/Controls.js';\r\n\r\nimport { evaluate } from 'mathjs'\r\n\r\nfunction App() {\r\n  const [updateCount, setUpdateCount] = useState(0);\r\n  const [detail, setDetail] = useState(50);\r\n  const [expression, setExpression] = useState(\"x^2 + y^2\");\r\n  const [ranges, setRanges] = useState([[\"-100\", \"100\"], [\"-100\", \"100\"], [\"0\", \"20000\"]]);\r\n  const [axes, setAxes] = useState(true);\r\n  const [renderingMethod, setRenderingMethod] = useState(\"faces\");\r\n\r\n  useEffect(() => {\r\n    document.title = \"Function Projector\"\r\n  }, []);\r\n\r\n  const handleDetailChange = (event) => {\r\n    setDetail(event.target.value);\r\n  }\r\n\r\n  const handleExpressionChange = (event) => {\r\n    setExpression(event.target.value);\r\n  }\r\n\r\n  const handleRangeChange = (event) => {\r\n    const newRanges = [...ranges];\r\n    switch(event.target.id){\r\n      case \"lowerXRange\":\r\n        newRanges[0][0] = event.target.value;\r\n        break;\r\n      case \"upperXRange\":\r\n        newRanges[0][1] = event.target.value;\r\n        break;\r\n      case \"lowerYRange\":\r\n        newRanges[1][0] = event.target.value;\r\n        break;\r\n      case \"upperYRange\":\r\n        newRanges[1][1] = event.target.value;\r\n        break;\r\n      case \"lowerZRange\":\r\n        newRanges[2][0] = event.target.value;\r\n        break;\r\n      case \"upperZRange\":\r\n        newRanges[2][1] = event.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setRanges(newRanges);\r\n  }\r\n\r\n  const handleAxesChange = (event) => {\r\n    setAxes(event.target.checked);\r\n  }\r\n\r\n  const handleRenderingMethodChange = (event) => {\r\n    setRenderingMethod(event.target.value);\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    try{\r\n      const testExp = expression.replaceAll(\"x\", \"(\"+1+\")\").replaceAll(\"y\", \"(\"+1+\")\");\r\n      const testEval = evaluate(testExp);\r\n    } catch(e) {\r\n      alert(\"Error when solving for Z: \" + e);\r\n    }\r\n\r\n    if(isNaN(parseInt(ranges[0][0]))){\r\n      alert(\"Lower X Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[0][1]))){\r\n      alert(\"Upper X Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[1][0]))){\r\n      alert(\"Lower Y Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[1][1]))){\r\n      alert(\"Upper Y Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[2][0]))){\r\n      alert(\"Lower Z Range invalid\");\r\n      return;\r\n    }\r\n    if(isNaN(parseInt(ranges[2][1]))){\r\n      alert(\"Upper Z Range invalid\");\r\n      return;\r\n    }\r\n\r\n    if(parseInt(ranges[0][0]) > parseInt(ranges[0][1])){\r\n      alert(\"Lower X Range must be less than Upper X Range.\");\r\n      return;\r\n    }\r\n    if(parseInt(ranges[1][0]) > parseInt(ranges[1][1])){\r\n      alert(\"Lower Y Range must be less than Upper Y Range.\");\r\n      return;\r\n    }\r\n    if(parseInt(ranges[2][0]) > parseInt(ranges[2][1])){\r\n      alert(\"Lower Z Range must be less than Upper Z Range.\");\r\n      return;\r\n    }\r\n\r\n    setUpdateCount(updateCount + 1);\r\n  }\r\n\r\n  // TODO: Make a reducer for all these states\r\n  return (\r\n    <div className=\"App\">\r\n      <Canvas\r\n        detail={detail}\r\n        expression={expression}\r\n        ranges={ranges}\r\n        axes={axes}\r\n        renderingMethod={renderingMethod}\r\n        updateCount={updateCount}\r\n      />\r\n      <Controls\r\n        detail={detail}\r\n        handleDetailChange={handleDetailChange}\r\n        expression={expression}\r\n        handleExpressionChange={handleExpressionChange}\r\n        ranges={ranges}\r\n        handleRangeChange={handleRangeChange}\r\n        handleAxesChange={handleAxesChange}\r\n        renderingMethod={renderingMethod}\r\n        handleRenderingMethodChange={handleRenderingMethodChange}\r\n        handleUpdate={handleUpdate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}