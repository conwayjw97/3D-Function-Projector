{"version":3,"sources":["components/canvas/utils/Graphics.js","components/canvas/Canvas.js","components/controls/Controls.js","App.js","index.js"],"names":["white","green","blue","red","rightBottomBack","THREE","leftTopBack","leftBottomBack","leftBottomFront","Graphics","canvas","width","height","expression","detail","ranges","this","xRange","parseInt","yRange","zRange","scene","camera","position","set","renderer","antialias","setSize","setClearColor","controls","OrbitControls","domElement","target","renderAxisIndicators","renderExpression","animate","requestAnimationFrame","render","update","remove","expressionGroup","renderLine","color","renderText","startVec","endVec","material","linePoints","lineGeometry","setFromPoints","line","add","string","x","y","z","text","SpriteText","fontFace","expPoints","evaluateExpression","createExpressionDots","length","createExpressionSquare","createExpressionPlane","n","nRangeMin","nRangeMax","step","includes","xEval","replaceAll","yPoints","zEval","yEval","evaluate","push","rangeScale","group","points","concat","apply","geometry","size","expressionPoints","undefined","isWholeSquare","isClosingTriangle","isClosingLine","colour","getColourForY","side","firstTriangleValid","secondTriangleValid","downardsTriangleValid","downardsTriangleNeeded","planePointsA","planeGeometryA","planePointsB","planeGeometryB","planePoints","planeGeometry","vector","Math","round","abs","Canvas","props","useRef","window","innerWidth","innerHeight","graphicsControls","useEffect","graphics","current","updateProjection","updateCount","ref","className","Controls","type","id","name","min","max","value","onChange","handleDetailChange","handleExpressionChange","onClick","handleUpdate","handleRangeChange","style","App","useState","setUpdateCount","setDetail","setExpression","setRanges","event","newRanges","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d25c7317.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport SpriteText from 'three-spritetext';\r\n\r\nimport { evaluate } from 'mathjs'\r\n\r\nconst black = \"rgb(40, 44, 52)\";\r\nconst white = \"rgb(255, 255, 255)\";\r\nconst green = \"rgb(0, 255, 0)\";\r\nconst blue = \"rgb(0, 0, 255)\";\r\nconst red = \"rgb(255, 0, 43)\";\r\n\r\nconst rightTopBack = new THREE.Vector3(100, 100, -100);\r\nconst rightBottomBack = new THREE.Vector3(100, -100, -100);\r\nconst rightTopFront = new THREE.Vector3(100, 100, 100);\r\nconst rightBottomFront = new THREE.Vector3(100, -100, 100);\r\nconst leftTopBack = new THREE.Vector3(-100, 100, -100);\r\nconst leftBottomBack = new THREE.Vector3(-100, -100, -100);\r\nconst leftTopFront = new THREE.Vector3(-100, 100, 100);\r\nconst leftBottomFront = new THREE.Vector3(-100, -100, 100);\r\n\r\nexport default class Graphics{\r\n  constructor(canvas, width, height, expression, detail, ranges){\r\n    this.expression = expression;\r\n    this.detail = detail;\r\n    this.xRange = [parseInt(ranges[0][0]), parseInt(ranges[0][1])];\r\n    this.yRange = [parseInt(ranges[1][0]), parseInt(ranges[1][1])];\r\n    this.zRange = [parseInt(ranges[2][0]), parseInt(ranges[2][1])];\r\n\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(45, width/height, 0.1, 1000);\r\n    this.camera.position.set(150, 100, 150);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true});\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setClearColor(black);\r\n\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.target = new THREE.Vector3(0, 0, 0);\r\n\r\n    this.renderAxisIndicators();\r\n    this.renderExpression();\r\n\r\n    const animate = () => {\r\n    \trequestAnimationFrame(animate);\r\n    \tthis.renderer.render(this.scene, this.camera);\r\n      this.controls.update();\r\n    }\r\n\r\n    animate();\r\n  }\r\n\r\n  updateProjection(expression, detail, ranges){\r\n    if(this.expression != expression || this.detail != detail || this.ranges != ranges){\r\n      this.expression = expression;\r\n      this.detail = detail;\r\n      this.xRange = [parseInt(ranges[0][0]), parseInt(ranges[0][1])];\r\n      this.yRange = [parseInt(ranges[1][0]), parseInt(ranges[1][1])];\r\n      this.zRange = [parseInt(ranges[2][0]), parseInt(ranges[2][1])];\r\n      this.scene.remove(this.expressionGroup);\r\n      this.renderExpression();\r\n    }\r\n  }\r\n\r\n  renderAxisIndicators(){\r\n    this.renderLine(leftBottomBack, rightBottomBack, new THREE.LineBasicMaterial({color: green}));\r\n    this.renderLine(leftBottomBack, leftTopBack, new THREE.LineBasicMaterial({color: red}));\r\n    this.renderLine(leftBottomBack, leftBottomFront, new THREE.LineBasicMaterial({color: blue}));\r\n\r\n    this.renderText(\"X\", 102.5, -100, -100, green);\r\n    this.renderText(\"Z\", -100, 102.5, -100, red);\r\n    this.renderText(\"Y\", -100, -100, 102.5, blue);\r\n\r\n    // this.renderLine(rightBottomBack, rightTopBack, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(rightTopBack, leftTopBack, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(leftTopBack, leftTopFront, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(leftTopFront, leftTopFront, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(leftTopFront, leftBottomFront, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(leftTopFront, rightTopFront, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(leftBottomFront, rightBottomFront, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(rightBottomFront,  rightTopFront, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(rightTopFront, rightTopBack, new THREE.LineBasicMaterial({color: white}));\r\n    // this.renderLine(rightBottomFront, rightBottomBack, new THREE.LineBasicMaterial({color: white}));\r\n  }\r\n\r\n  renderLine(startVec, endVec, material){\r\n    const linePoints = [startVec, endVec];\r\n    const lineGeometry = new THREE.BufferGeometry().setFromPoints(linePoints);\r\n    const line = new THREE.Line(lineGeometry, material);\r\n    this.scene.add(line);\r\n  }\r\n\r\n  renderText(string, x, y, z, color){\r\n    const text = new SpriteText(string, 6, color);\r\n    text.position.x = x;\r\n    text.position.y = y;\r\n    text.position.z = z;\r\n    text.fontFace = \"Consolas\";\r\n    this.scene.add(text);\r\n  }\r\n\r\n  renderExpression(){\r\n    const expPoints = this.evaluateExpression();\r\n\r\n    this.expressionGroup = new THREE.Group();\r\n    this.expressionGroup = this.createExpressionDots(this.expressionGroup, expPoints);\r\n    for(let x=0; x<expPoints.length; x++){\r\n      for(let y=0; y<expPoints[x].length; y++){\r\n        // this.renderText(x + \":\" + y, expPoints[x][y].x, expPoints[x][y].y, expPoints[x][y].z, white);\r\n        this.expressionGroup = this.createExpressionSquare(this.expressionGroup, expPoints, x, y);\r\n        this.expressionGroup = this.createExpressionPlane(this.expressionGroup, expPoints, x, y);\r\n      }\r\n    }\r\n\r\n    this.scene.add(this.expressionGroup);\r\n  }\r\n\r\n  rangeScale(n, nRangeMin, nRangeMax){\r\n    return (n - nRangeMin) * (100 - (-100)) / (nRangeMax - nRangeMin) + (-100);\r\n  }\r\n\r\n  evaluateExpression(){\r\n    let expPoints = [];\r\n    const step = (this.xRange[1]-this.xRange[0])/this.detail;\r\n    if(this.expression.includes(\"x\") || this.expression.includes(\"y\")){\r\n      for(let x=this.xRange[0]; x<=this.xRange[1]; x+=step){\r\n        let xEval = this.expression.replaceAll(\"x\", \"(\"+x+\")\");\r\n        let yPoints = [];\r\n        for(let y=this.yRange[0]; y<=this.yRange[1]; y+=step){\r\n          let zEval;\r\n          if(xEval.includes(\"y\")){\r\n            let yEval = xEval.replaceAll(\"y\", \"(\"+y+\")\");\r\n            zEval = evaluate(yEval);\r\n          }\r\n          else{\r\n            zEval = evaluate(xEval);\r\n          }\r\n          if(zEval>=this.zRange[0] && zEval<=this.zRange[1]){\r\n            yPoints.push(new THREE.Vector3(this.rangeScale(x, this.xRange[0], this.xRange[1]), this.rangeScale(zEval, this.zRange[0], this.zRange[1]), this.rangeScale(y, this.yRange[0], this.yRange[1])));\r\n          }\r\n        }\r\n        if(yPoints.length > 0){\r\n          expPoints.push(yPoints);\r\n        }\r\n      }\r\n    }\r\n    return expPoints;\r\n  }\r\n\r\n  createExpressionDots(group, expPoints){\r\n    const points = [].concat.apply([], expPoints);\r\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n    const material = new THREE.PointCloudMaterial({color: white, size: 0.25});\r\n    const expressionPoints = new THREE.Points(geometry, material);\r\n    group.add(expressionPoints);\r\n    return group;\r\n  }\r\n\r\n  createExpressionSquare(group, expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const material = new THREE.LineBasicMaterial({color: white});\r\n\r\n      const isWholeSquare = expPoints[x+1][y] !== undefined && expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined && expPoints[x][y+1] !== undefined;\r\n      const isClosingTriangle = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const isClosingLine = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let points = null;\r\n      if(isWholeSquare){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingTriangle){\r\n        points = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1], expPoints[x][y]];\r\n      }\r\n      else if(isClosingLine){\r\n        points = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n      }\r\n\r\n      if(points !== null){\r\n        const geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        const line = new THREE.Line(geometry, material);\r\n        group.add(line);\r\n      }\r\n    }\r\n\r\n    return group;\r\n  }\r\n\r\n  createExpressionPlane(group, expPoints, x, y){\r\n    const isValidPoint = expPoints[x+1] !== undefined;\r\n\r\n    if(isValidPoint){\r\n      const colour = this.getColourForY(expPoints[x][y].y);\r\n      const material = new THREE.MeshBasicMaterial({color: colour, side: THREE.DoubleSide});\r\n\r\n      const firstTriangleValid = expPoints[x+1][y] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const secondTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y+1] !== undefined;\r\n      const downardsTriangleValid = expPoints[x][y+1] !== undefined && expPoints[x+1][y] !== undefined;\r\n\r\n      let downardsTriangleNeeded = true;\r\n      if(firstTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsA = [expPoints[x][y], expPoints[x+1][y], expPoints[x+1][y+1]];\r\n        const planeGeometryA = new THREE.BufferGeometry().setFromPoints(planePointsA);\r\n        group.add(new THREE.Mesh(planeGeometryA, material));\r\n      }\r\n      if(secondTriangleValid){\r\n        downardsTriangleNeeded = false;\r\n        const planePointsB = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y+1]];\r\n        const planeGeometryB = new THREE.BufferGeometry().setFromPoints(planePointsB);\r\n        group.add(new THREE.Mesh(planeGeometryB, material));\r\n      }\r\n      if(downardsTriangleNeeded && downardsTriangleValid){\r\n        const planePoints = [expPoints[x][y], expPoints[x][y+1], expPoints[x+1][y]];\r\n        const planeGeometry = new THREE.BufferGeometry().setFromPoints(planePoints);\r\n        group.add(new THREE.Mesh(planeGeometry, material));\r\n      }\r\n    }\r\n\r\n    return group;\r\n  }\r\n\r\n  getColourForVector(vector){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    red = Math.round(Math.abs(vector.z) * (255/100));\r\n    blue = Math.round(Math.abs(vector.y) * (255/100));\r\n    green = Math.round(Math.abs(vector.x) * (255/100));\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n\r\n  getColourForY(y){\r\n    let red, green, blue;\r\n    red = green = blue = 0;\r\n    if(y>0){\r\n      red = Math.round(y * (255/100));\r\n      green = Math.round(255 - red);\r\n    }\r\n    else{\r\n      blue = Math.round(-y * (255/100));\r\n      green = Math.round(255 - blue);\r\n    }\r\n    return \"rgb(\"+red+\",\"+green+\",\"+blue+\")\";\r\n  }\r\n}\r\n","// https://observablehq.com/@kelleyvanevert/projection-of-3d-models-using-javascript-and-html5-canvas\r\n// https://academo.org/demos/3d-surface-plotter/\r\n// https://www.benjoffe.com/code/tools/functions3d/examples\r\n// https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene\r\n// https://threejsfundamentals.org/threejs/lessons/threejs-custom-geometry.html\r\n// https://codepen.io/WebSeed/pen/ZmXxKz\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport Graphics from \"./utils/Graphics.js\"\r\nimport \"./Canvas.css\";\r\n\r\nfunction Canvas(props) {\r\n  const canvas = useRef(null);\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n  const graphicsControls = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const graphics = new Graphics(canvas.current, width, height, props.expression, props.detail, props.ranges);\r\n\r\n    const updateProjection = (expression, detail, ranges) => {\r\n      graphics.updateProjection(expression, detail, ranges);\r\n    }\r\n\r\n    graphicsControls.current = {updateProjection};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    graphicsControls.current.updateProjection(props.expression, props.detail, props.ranges);\r\n  }, [props.updateCount]);\r\n\r\n  return (\r\n    <canvas ref={canvas} width={width} height={height} className=\"canvas\">\r\n      <p>Your browser doesn't support canvas.</p>\r\n    </canvas>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport \"./Controls.css\";\r\n\r\n// TODO: Clean this up\r\nfunction Controls(props) {\r\n  return (\r\n    <div className=\"controls\">\r\n      <div className=\"expression\">\r\n        <label>Detail: </label>\r\n        <input type=\"range\" id=\"detail\" name=\"detail\" min=\"1\" max=\"200\" value={props.detail} onChange={props.handleDetailChange} />\r\n\r\n        <label> Z = </label>\r\n        <input type=\"text\" id=\"expression\" name=\"expression\" value={props.expression} onChange={props.handleExpressionChange} />\r\n        <button onClick={props.handleUpdate}>Update</button>\r\n\r\n        <label> X Range: [</label>\r\n        <input type=\"text\" id=\"lowerXRange\" value={props.ranges[0][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>,</label>\r\n        <input type=\"text\" id=\"upperXRange\" value={props.ranges[0][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>]</label>\r\n\r\n        <label> Y Range: [</label>\r\n        <input type=\"text\" id=\"lowerYRange\" value={props.ranges[1][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>,</label>\r\n        <input type=\"text\" id=\"upperYRange\" value={props.ranges[1][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>]</label>\r\n\r\n        <label> Z Range: [</label>\r\n        <input type=\"text\" id=\"lowerZRange\" value={props.ranges[2][0]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>,</label>\r\n        <input type=\"text\" id=\"upperZRange\" value={props.ranges[2][1]} onChange={props.handleRangeChange} style={{width: \"2.5em\"}} />\r\n        <label>]</label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import { useState, useEffect } from 'react';\r\nimport Canvas from './components/canvas/Canvas.js';\r\nimport Controls from './components/controls/Controls.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [updateCount, setUpdateCount] = useState(0);\r\n  const [detail, setDetail] = useState(50);\r\n  const [expression, setExpression] = useState(\"1-abs(x+y)-abs(y-x)\");\r\n  const [ranges, setRanges] = useState([[\"-100\", \"100\"], [\"-100\", \"100\"], [\"-100\", \"100\"]]);\r\n\r\n  const handleDetailChange = (event) => {\r\n    setDetail(event.target.value);\r\n  }\r\n\r\n  const handleExpressionChange = (event) => {\r\n    setExpression(event.target.value);\r\n  }\r\n\r\n  const handleRangeChange = (event) => {\r\n    const newRanges = [...ranges];\r\n    switch(event.target.id){\r\n      case \"lowerXRange\":\r\n        newRanges[0][0] = event.target.value;\r\n        break;\r\n      case \"upperXRange\":\r\n        newRanges[0][1] = event.target.value;\r\n        break;\r\n      case \"lowerYRange\":\r\n        newRanges[1][0] = event.target.value;\r\n        break;\r\n      case \"upperYRange\":\r\n        newRanges[1][1] = event.target.value;\r\n        break;\r\n      case \"lowerZRange\":\r\n        newRanges[2][0] = event.target.value;\r\n        break;\r\n      case \"upperZRange\":\r\n        newRanges[2][1] = event.target.value;\r\n        break;\r\n    }\r\n    setRanges(newRanges);\r\n  }\r\n\r\n  const handleUpdate = () => {\r\n    setUpdateCount(updateCount + 1);\r\n  }\r\n\r\n  // TODO: Make a reducer for all these states\r\n  return (\r\n    <div className=\"App\">\r\n      <Canvas\r\n        detail={detail}\r\n        expression={expression}\r\n        ranges={ranges}\r\n        updateCount={updateCount}\r\n      />\r\n      <Controls\r\n        detail={detail}\r\n        handleDetailChange={handleDetailChange}\r\n        expression={expression}\r\n        handleExpressionChange={handleExpressionChange}\r\n        ranges={ranges}\r\n        handleRangeChange={handleRangeChange}\r\n        handleUpdate={handleUpdate}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}